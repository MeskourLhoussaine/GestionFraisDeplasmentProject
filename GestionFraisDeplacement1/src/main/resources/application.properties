 

spring.datasource.url=jdbc:mysql://localhost:3306/gestiondep
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true

# Set here configurations for the database connection

spring.main.allow-bean-definition-overriding=true
spring.application.name=generated

# Keep the connection alive if idle for a long time (needed in production)

# = JPA / HIBERNATE
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.hbm2ddl.auto=create
server.port=9090
##server.servlet.context-path=/ecomerce
##spring.datasource.url = jdbc:mysql://localhost:3306/ecomerce?serverTimezone=UTC

# Username and password
##spring.datasource.username = root
##spring.datasource.password =
# ===============================
# Show or not log for each sql query

spring.jpa.properties.hibernate.format_sql=true

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application




##server.port = 9090
# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
##spring.jpa.show-sql = true
##spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
##spring.jpa.hibernate.ddl-auto = update


